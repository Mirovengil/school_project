<p>Итак, есть две переменные. Надо обменять их значения местами. То есть, если переменная <b>a</b> до выполнения алгортма
имела значение <b>v1</b> и переменная <b>b</b> до имела значение <b>v2</b>, то после выполнения алгоритма переменная 
<b>a</b> должна хранить значение <b>v2</b>, а переменная <b>b</b>, соответственно, - значение <b>v1</b>.</p>

<p>Задача, казалось бы, простейшая. Но есть несколько способов реализации выполняющего её алгоритма, о некоторых вы и не подозревали.</p>

<h2>Реализация с использованием третьей, дополнительной переменной</h2>

<p>Давайте попробуем реализовать алгоритм "в лоб":</p>
<p class = "lang">C++</p>
<pre><code class = "C++">
a = b;
b = a;
</code></pre>
<p class = "lang">Pascal</p>
<pre><code class = "Pascal">
a := b;
b := a;
</code></pre>
<p class = "lang">Python</p>
<pre><code class = "Python">
a = b
b = a
</code></pre>

<p>Но есть один нюанс. Обе переменные будут хранить значение <b>v2</b>:</p>

<img src = "./img/based/001.png">

<p>Давайте заведём вторую переменную и попробуем реализовать алгоритм с её использованием:</p>

<img src = "./img/based/002.png">

<p>Теперь его будет совсем несложно реализовать на необходимом языке:</p>
<p class = "lang">C++</p>
<pre><code class = "C++">
c = a;
a = b;
b = c;
</code></pre>
<p class = "lang">Pascal</p>
<pre><code class = "Pascal">
c := a;
a := b;
b := c;
</code></pre>
<p class = "lang">Python</p>
<pre><code class = "Python">
c = a
a = b
b = c
</code></pre>

<p>Это - самый простой и универсальный способ обменять две переменные значениями.
Но существуют и ещё несколько, без использования третьей (это может пригодиться, например, 
на олимпиаде), которые работают в конкретных случаях. Далее они будут разобраны. Если
у вас нет табу на третью переменную, то дальше можно не читать.</p>

<a href="./based.html" class = "readdr">Базовые алгоритмы</a>

<h2>Реализация через битовые операции</h2>

<p>Для понимания того, что будет дальше, необходимо владеть битовыми операциями хотя бы на базовом уровне.</p>

<img src = "./img/based/003.png">

<p>Это основывается на двух свойствах оператора XOR (исключающее ИЛИ):</p>

<img src = "./img/based/004.png">

<p>Реализуется это чудо на основных языках безо всяких проблем, но неприменимо к строковым переменным, а только к числам.
Зато оно работает быстрее, чем обмен через третью переменную.</p>

<p class = "lang">C++</p>
<pre><code class = "C++">
a = a ^ b;
b = a ^ b;
a = a ^ b;
</code></pre>
<p class = "lang">Pascal</p>
<pre><code class = "Pascal">
a := a <b>xor</b> b;
b := a <b>xor</b> b
a := a <b>xor</b> b;
</code></pre>
<p class = "lang">Python</p>
<pre><code class = "Python">
a = a^b
b = a^b
b = a^b
</code></pre>


<h2>Реализация через арифметику</h2>

<p>Этот способ для понимания требует владения арифметикой на уровне 5-6 классов:
a = a + b
b = a - b = (a + b) - b = a + b - b = a
a = a - b = (a + b) - a = b + a - a = b
</p>

<p>В реализации его также нет никаких сложностей:</p>

<p class = "lang">C++</p>
<pre><code class = "C++">
a = a + b;
b = a - b;
a = a - b;
</code></pre>
<p class = "lang">Pascal</p>
<pre><code class = "Pascal">
a := a + b;
b := a - b;
a := a - b;
</code></pre>
<p class = "lang">Python</p>
<pre><code class = "Python">
a = a + b
b = a - b
a = a - b
</code></pre>

<h2>Реализация через средства языка Python</h2>

<p>Язык Python обладает встроенной в синтаксис возможностью выполнения обмена двух переменных значениями: </p>
<p class = "lang">Python</p>
<pre><code class = "Python">
a, b = b, a
</code></pre>
<p>Всё! Готово. Но стоит помнить, что Python, вследствие его интерпретируемости, обладает невысокой скоростью
быстродействие, следовательно, его применение в олимпиадах есть вопрос неоднозначный. Однако вне олимпиад
рекомендуется использовать этот способ, как наиболее краткий и простой.</p>

<a href="./based.html" class = "readdr">Базовые алгоритмы</a>
